# Generated by Django 5.1.6 on 2025-02-25 02:35

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('prompt_template', models.TextField(help_text='The template to use for generating the OpenAI prompt. Use {variables} for replacements.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('business_name', models.CharField(blank=True, max_length=255, null=True)),
                ('business_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('business_address', models.JSONField(blank=True, default=dict, null=True)),
                ('target_market', models.TextField(blank=True, null=True)),
                ('value_proposition', models.TextField(blank=True, null=True)),
                ('additional_context', models.TextField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, max_length=255, null=True)),
                ('facebook', models.URLField(blank=True, max_length=255, null=True)),
                ('tiktok', models.URLField(blank=True, max_length=255, null=True)),
                ('linkedin', models.URLField(blank=True, max_length=255, null=True)),
                ('youtube', models.URLField(blank=True, max_length=255, null=True)),
                ('twitter', models.URLField(blank=True, max_length=255, null=True)),
                ('threads', models.URLField(blank=True, max_length=255, null=True)),
                ('primary_color', models.CharField(blank=True, max_length=7, null=True)),
                ('secondary_color', models.CharField(blank=True, max_length=7, null=True)),
                ('brand_voice', models.CharField(blank=True, max_length=50, null=True)),
                ('brand_description', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('plan_type', models.CharField(choices=[('past-clients', 'Past Clients SmartPlan'), ('open-house', 'Open House SmartPlan')], max_length=20)),
                ('channels', models.JSONField(default=list)),
                ('timeline', models.CharField(choices=[('30days', '30 Days'), ('60days', '60 Days'), ('90days', '90 Days')], max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('generating', 'Generating'), ('completed', 'Completed'), ('failed', 'Failed')], default='draft', max_length=20)),
                ('content', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GeneratedPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_plans', to=settings.AUTH_USER_MODEL)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_plans', to='smartplan.plan')),
            ],
        ),
        migrations.CreateModel(
            name='TemplateOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('is_required', models.BooleanField(default=False)),
                ('option_type', models.CharField(choices=[('text', 'Text Input'), ('number', 'Number Input'), ('boolean', 'Yes/No Choice'), ('select', 'Select from Options')], max_length=20)),
                ('default_value', models.JSONField(blank=True, null=True)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='smartplan.template')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('business_name', models.CharField(blank=True, max_length=255)),
                ('website', models.URLField(blank=True)),
                ('business_description', models.TextField(blank=True)),
                ('service_areas', models.CharField(blank=True, max_length=255)),
                ('years_in_business', models.IntegerField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True)),
                ('instagram', models.URLField(blank=True)),
                ('linkedin', models.URLField(blank=True)),
                ('youtube', models.URLField(blank=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/')),
                ('primary_color', models.CharField(default='#485fc7', max_length=7)),
                ('secondary_color', models.CharField(default='#00d1b2', max_length=7)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
